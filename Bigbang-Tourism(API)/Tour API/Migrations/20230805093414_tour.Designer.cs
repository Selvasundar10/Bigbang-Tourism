// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tour_API.DB;

#nullable disable

namespace Tour_API.Migrations
{
    [DbContext(typeof(TourContext))]
    [Migration("20230805093414_tour")]
    partial class tour
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelsLibrary.Hotel", b =>
                {
                    b.Property<int>("Hotel_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hotel_Id"));

                    b.Property<string>("Contact_Details")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Hotel_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Hotel_Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ModelsLibrary.Tour", b =>
                {
                    b.Property<int>("Tour_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tour_Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Hotel_Id")
                        .HasColumnType("int");

                    b.Property<string>("Itinerary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Spot_Id")
                        .HasColumnType("int");

                    b.Property<string>("TourDescription")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("TourSpotSpot_Id")
                        .HasColumnType("int");

                    b.Property<string>("Tour_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TravelAgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Travel_AgentAgent_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Tour_Id");

                    b.HasIndex("Hotel_Id");

                    b.HasIndex("TourSpotSpot_Id");

                    b.HasIndex("Travel_AgentAgent_Id");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("ModelsLibrary.TourSpot", b =>
                {
                    b.Property<int>("Spot_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Spot_Id"));

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Specialty")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpotName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Spot_Id");

                    b.ToTable("TourSpots");
                });

            modelBuilder.Entity("ModelsLibrary.Travel_Agent", b =>
                {
                    b.Property<string>("Agent_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Agent_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Contact_Number")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Agent_Id");

                    b.ToTable("Travel_Agent");
                });

            modelBuilder.Entity("ModelsLibrary.Tour", b =>
                {
                    b.HasOne("ModelsLibrary.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("Hotel_Id");

                    b.HasOne("ModelsLibrary.TourSpot", "TourSpot")
                        .WithMany()
                        .HasForeignKey("TourSpotSpot_Id");

                    b.HasOne("ModelsLibrary.Travel_Agent", "Travel_Agent")
                        .WithMany()
                        .HasForeignKey("Travel_AgentAgent_Id");

                    b.Navigation("Hotel");

                    b.Navigation("TourSpot");

                    b.Navigation("Travel_Agent");
                });
#pragma warning restore 612, 618
        }
    }
}
