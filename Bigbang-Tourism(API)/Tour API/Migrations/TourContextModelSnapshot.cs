// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tour_API.DB;

#nullable disable

namespace Tour_API.Migrations
{
    [DbContext(typeof(TourContext))]
    partial class TourContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelsLibrary.Hotel", b =>
                {
                    b.Property<int?>("Hotel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Hotel_id"));

                    b.Property<string>("Contact_details")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Hotel_name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int?>("Tour_Id")
                        .HasColumnType("int");

                    b.HasKey("Hotel_id");

                    b.HasIndex("Tour_Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ModelsLibrary.Itinerary", b =>
                {
                    b.Property<int?>("Itinerary_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Itinerary_Id"));

                    b.Property<string>("Activities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<int?>("Tour_Id")
                        .HasColumnType("int");

                    b.HasKey("Itinerary_Id");

                    b.HasIndex("Tour_Id");

                    b.ToTable("Itinerary");
                });

            modelBuilder.Entity("ModelsLibrary.Tour", b =>
                {
                    b.Property<int?>("Tour_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Tour_Id"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tour_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelAgencyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Travel_AgentAgent_Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Tour_Id");

                    b.HasIndex("Travel_AgentAgent_Id");

                    b.ToTable("Tour");
                });

            modelBuilder.Entity("ModelsLibrary.Travel_Agent", b =>
                {
                    b.Property<string>("Agent_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgencyImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agent_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Contact_Number")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Agent_Id");

                    b.ToTable("Travel_Agent");
                });

            modelBuilder.Entity("ModelsLibrary.Hotel", b =>
                {
                    b.HasOne("ModelsLibrary.Tour", "Tour")
                        .WithMany("hotel")
                        .HasForeignKey("Tour_Id");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ModelsLibrary.Itinerary", b =>
                {
                    b.HasOne("ModelsLibrary.Tour", "Tour")
                        .WithMany("itineraries")
                        .HasForeignKey("Tour_Id");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("ModelsLibrary.Tour", b =>
                {
                    b.HasOne("ModelsLibrary.Travel_Agent", "Travel_Agent")
                        .WithMany()
                        .HasForeignKey("Travel_AgentAgent_Id");

                    b.Navigation("Travel_Agent");
                });

            modelBuilder.Entity("ModelsLibrary.Tour", b =>
                {
                    b.Navigation("hotel");

                    b.Navigation("itineraries");
                });
#pragma warning restore 612, 618
        }
    }
}
